var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var GameUI_1 = require("./script/GameUI");
var Game_1 = require("./script/Game");
var SetDialog_1 = require("./script/SetDialog");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("script/GameUI.ts", GameUI_1.default);
        reg("script/Game.ts", Game_1.default);
        reg("script/SetDialog.ts", SetDialog_1.default);
    };
    GameConfig.width = 1024;
    GameConfig.height = 648;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "horizontal";
    GameConfig.alignV = "middle";
    GameConfig.alignH = "center";
    GameConfig.startScene = "ui/mian_scene.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = true;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = false;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();

},{"./script/Game":3,"./script/GameUI":4,"./script/SetDialog":5}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        //加载IDE指定的场景
        GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene);
    };
    return Main;
}());
//激活启动类
new Main();

},{"./GameConfig":1}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameUI_1 = require("./GameUI");
var Game = /** @class */ (function (_super) {
    __extends(Game, _super);
    function Game() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.frameCnt = 0;
        _this.bulletArr = [];
        _this.delay = 0;
        return _this;
    }
    Game.prototype.onUpdate = function () {
        var delta = Laya.timer.delta;
        if (this.frameCnt % 100 == 0) {
            console.log('onUpdate', this.frameCnt);
        }
        if (delta > 500) {
            console.log('onUpdate more than', this.frameCnt, delta);
        }
        this.frameCnt++;
        if (this.delay <= 0) {
            this.createBullet();
            this.delay = 500;
        }
        this.delay -= delta;
        var speed = 200 / 1000;
        for (var _i = 0, _a = this.bulletArr; _i < _a.length; _i++) {
            var bullet = _a[_i];
            bullet.x -= speed * delta;
        }
    };
    Game.prototype.createBullet = function () {
        var bullet = new Laya.Label((this.bulletArr.length + 1) + '');
        bullet.color = '#ff0000';
        GameUI_1.default.instance.addChild(bullet);
        bullet.pos(1000, 500);
        this.bulletArr.push(bullet);
    };
    return Game;
}(Laya.Script));
exports.default = Game;

},{"./GameUI":4}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("./../ui/layaMaxUI");
var SetDialog_1 = require("./SetDialog");
var GameUI = /** @class */ (function (_super) {
    __extends(GameUI, _super);
    function GameUI() {
        var _this = _super.call(this) || this;
        GameUI.instance = _this;
        //关闭多点触控，否则就无敌了
        Laya.MouseManager.multiTouchEnabled = false;
        return _this;
    }
    GameUI.prototype.onAwake = function () {
        var _this = this;
        this.pause_label.on(Laya.Event.CLICK, this, function () {
            console.log('click');
            var dialog = new SetDialog_1.default();
            dialog.popup(true, false);
        });
        var move1 = function () {
            var move2 = function () {
                Laya.Tween.to(_this.pause_label, { x: 0 }, 2000, Laya.Ease.linearNone, Laya.Handler.create(_this, move1));
            };
            Laya.Tween.to(_this.pause_label, { x: 500 }, 2000, Laya.Ease.linearNone, Laya.Handler.create(_this, move2));
        };
        move1();
    };
    ;
    return GameUI;
}(layaMaxUI_1.ui.ui.mian_sceneUI));
exports.default = GameUI;

},{"./../ui/layaMaxUI":6,"./SetDialog":5}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("./../ui/layaMaxUI");
var SetDialog = /** @class */ (function (_super) {
    __extends(SetDialog, _super);
    function SetDialog() {
        var _this = _super.call(this) || this;
        _this.timer = new Laya.Timer(false);
        return _this;
    }
    SetDialog.prototype.onAwake = function () {
        var _this = this;
        this.pause_label.on(Laya.Event.CLICK, this, function () {
            Laya.timer.pause();
            Laya.updateTimer.pause();
            var tweenMap = Laya.Tween.tweenMap;
            for (var gid in tweenMap) {
                var arr = tweenMap[gid];
                for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
                    var t = arr_1[_i];
                    t.pause();
                }
            }
        });
        this.resume_label.on(Laya.Event.CLICK, this, function () {
            Laya.timer.resume();
            Laya.updateTimer.resume();
            var tweenMap = Laya.Tween.tweenMap;
            for (var gid in tweenMap) {
                var arr = tweenMap[gid];
                for (var _i = 0, arr_2 = arr; _i < arr_2.length; _i++) {
                    var t = arr_2[_i];
                    t.resume();
                }
            }
        });
        var move1 = function () {
            var move2 = function () {
                Laya.Tween.to(_this.resume_label, { x: 0 }, 1000, Laya.Ease.linearNone, Laya.Handler.create(_this, move1));
            };
            Laya.Tween.to(_this.resume_label, { x: 200 }, 1000, Laya.Ease.linearNone, Laya.Handler.create(_this, move2));
        };
        move1();
    };
    ;
    return SetDialog;
}(layaMaxUI_1.ui.ui.set_dialogUI));
exports.default = SetDialog;

},{"./../ui/layaMaxUI":6}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Dialog = Laya.Dialog;
var Scene = Laya.Scene;
var REG = Laya.ClassUtils.regClass;
var ui;
(function (ui_1) {
    var ui;
    (function (ui) {
        var mian_sceneUI = /** @class */ (function (_super) {
            __extends(mian_sceneUI, _super);
            function mian_sceneUI() {
                return _super.call(this) || this;
            }
            mian_sceneUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("ui/mian_scene");
            };
            return mian_sceneUI;
        }(Scene));
        ui.mian_sceneUI = mian_sceneUI;
        REG("ui.ui.mian_sceneUI", mian_sceneUI);
        var set_dialogUI = /** @class */ (function (_super) {
            __extends(set_dialogUI, _super);
            function set_dialogUI() {
                return _super.call(this) || this;
            }
            set_dialogUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("ui/set_dialog");
            };
            return set_dialogUI;
        }(Dialog));
        ui.set_dialogUI = set_dialogUI;
        REG("ui.ui.set_dialogUI", set_dialogUI);
    })(ui = ui_1.ui || (ui_1.ui = {}));
})(ui = exports.ui || (exports.ui = {}));

},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
